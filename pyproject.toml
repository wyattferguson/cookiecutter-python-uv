[project]
name = "cookiecutter-python-uv"
version = "0.5.2"
description = "A modern, opinionated, cookiecutter template for your next Python project."
authors = [{ name = "Wyatt Ferguson", email = "wyattxdev@duck.com" }]
license = { file = "LICENSE" }
readme = "README.md"
keywords = ['cookiecutter', 'template', 'uv', 'python', 'project', 'generator']
requires-python = ">=3.10,<4"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Code Generators",
]

dependencies = [
  "cookiecutter>=2.1.1"
]

[dependency-groups]
dev = [
    "nox>=2025.5.1",
    "mypy >=1.16.0",
    "pytest>=8.4.0",
    "pytest-cookies>=0.7.0",
    "ruff>=0.11.12",
    "taskipy>=1.14.1",
    "toml>=0.10.2",
    "types-toml>=0.10.8.20240310",
    "portray>=1.8.0",
    "legacy-cgi>=2.6.3",
    "setuptools>=80.9.0",
]

[project.urls]
Repository = "https://github.com/wyattferguson/cookiecutter-python-uv"
Documentation = "https://github.com/wyattferguson/cookiecutter-python-uv"
Issues = "https://github.com/wyattferguson/cookiecutter-python-uv/issues"

[tool.taskipy.tasks]
format = "ruff format ./tests/"
lint = "ruff check --fix ./tests/"
type = "mypy --strict ./tests/"
tests = "pytest --color=yes tests"
nox = "nox -s tests"
docs = "portray in_browser"
serve = "portray server"
html = "portray as_html"
publish = "portray on_github_pages"

[tool.ruff]
line-length = 100
indent-width = 4
format.indent-style = "space"
target-version = "py313"
src = ["tests","hooks"]

[tool.ruff.lint]
pydocstyle.convention = "google"
fixable = ["ALL"]
select = ["ALL"]
ignore = [
    "FA102", # Flake8-future-annotations
    "F401", # Disable fix for unused imports
    "B904", # Allow raising exceptions without from e
    "PLR0913", # too many arguments
    "CPY", # Flake8-copyright
    "T201", # Debugging print statements
    "ERA", # Eradicate â€“ detects commented-out code
    "BLE001", # Catch-all exceptions
    "D100", # missing docstring in public module
    "D105", # undocumented magic method
    "D107", # undocumented public init
    "D203", # incorrect-blank-line-before-class
    "D205", # line-between-summary-and-description
    "D212", # multi-line-summary-first-line
    "D407", # missing-dashed-underline-after-section
    "S311", # rand-usage
]

[tool.mypy]
files = ["tests","hooks"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true


[tool.portray]
modules=["tests"]

[tool.portray.mkdocs.theme]
name = "material"
custom_dir = "docs"
palette = {scheme= "slate", primary="deep purple", accent="purple"}

[tool.portray.mkdocs]
site_name = "Cookiecutter Python UV"
extra_css = ["css/extra.css"]

# Custom Docs Navigation Order
[[tool.portray.mkdocs.nav]]
Home = "docs/home.md"

[[tool.portray.mkdocs.nav]]
    [[tool.portray.mkdocs.nav."Setup Guide"]]
    "Installation" = "docs/setup_guide/installation.md"

    [[tool.portray.mkdocs.nav."Setup Guide"]]
    "CLI" = "docs/setup_guide/cli.md"

    [[tool.portray.mkdocs.nav."Setup Guide"]]
    "Github" = "docs/setup_guide/github.md"

    [[tool.portray.mkdocs.nav."Setup Guide"]]
    "PyPI" = "docs/setup_guide/pypi.md"

    [[tool.portray.mkdocs.nav."Setup Guide"]]
    "Documentation" = "docs/setup_guide/documentation.md"

    [[tool.portray.mkdocs.nav."Setup Guide"]]
    "Testing" = "docs/setup_guide/testing.md"

    [[tool.portray.mkdocs.nav."Setup Guide"]]
    "Configuration" = "docs/setup_guide/configuration.md"

[[tool.portray.mkdocs.nav]]
License = "docs/license.md"